xquery version "1.0-ml";

import module namespace test = "http://marklogic.com/test" at "/test/test-helper.xqy";
import module namespace bib = "http://marklogic.com/holy/ml-modules/bible-utils" at "/libs/bible-utils.xqy";

declare variable $TOME-NAMES-MAP :=
    map:map()
    => map:with('Rdz', 'Księga Rodzaju')
    => map:with('Wj', 'Księga Wyjścia')
    => map:with('Kpł', 'Księga Kapłańska')
    => map:with('Lb', 'Księga Liczb')
    => map:with('Pwt', 'Księga Powtórzonego Prawa')
    => map:with('Joz', 'Księga Jozuego')
    => map:with('Sdz', 'Księga Sędziów')
    => map:with('Rt', 'Księga Rut')
    => map:with('1Sm', '1. Księga Samuela')
    => map:with('2Sm', '2. Księga Samuela')
    => map:with('1Krl', '1. Księga Królewska')
    => map:with('2Krl', '2. Księga Królewska')
    => map:with('1Krn', '1. Księga Kronik')
    => map:with('2Krn', '2. Księga Kronik')
    => map:with('Ezd', 'Księga Ezdrasza')
    => map:with('Ne', 'Księga Nehemiasza')
    => map:with('Tb', 'Księga Tobiasza')
    => map:with('Jdt', 'Księga Judyty')
    => map:with('Est', 'Księga Estery')
    => map:with('1Mch', '1. Księga Machabejska')
    => map:with('2Mch', '2. Księga Machabejska')
    => map:with('Hi', 'Księga Hioba')
    => map:with('Ps', 'Księga Psalmów')
    => map:with('Prz', 'Księga Przysłów')
    => map:with('Koh', 'Księga Koheleta')
    => map:with('Pnp', 'Pieśń nad Pieśniami')
    => map:with('Mdr', 'Księga Mądrości')
    => map:with('Syr', 'Mądrość Syracha (Syracydesa)')
    => map:with('Iz', 'Księga Izajasza')
    => map:with('Jr', 'Księga Jeremiasza')
    => map:with('Lm', 'Lamentacje')
    => map:with('Ba', 'Księga Barucha')
    => map:with('Ez', 'Księga Ezechiela')
    => map:with('Dn', 'Księga Daniela')
    => map:with('Oz', 'Księga Ozeasza')
    => map:with('Jl', 'Księga Joela')
    => map:with('Am', 'Księga Amosa')
    => map:with('Ab', 'Księga Abdiama')
    => map:with('Jon', 'Księga Jonasza')
    => map:with('Mi', 'Księga Micheasza')
    => map:with('Na', 'Księga Nahuma')
    => map:with('Ha', 'Księga Habakuka')
    => map:with('So', 'Księga Sofoniasza')
    => map:with('Ag', 'Księga Aggeusza')
    => map:with('Za', 'Księga Zachariasza')
    => map:with('Ml', 'Księga Malachiasza')
    => map:with('Mt', 'Ewangelia wg św. Mateusza')
    => map:with('Mk', 'Ewangelia wg św. Marka')
    => map:with('Łk', 'Ewangelia wg św. Łukasza')
    => map:with('J', 'Ewangelia wg św. Jana')
    => map:with('Dz', 'Dzieje Apostolskie')
    => map:with('Rz', 'List do Rzymian')
    => map:with('1Kor', '1. List do Koryntian')
    => map:with('2Kor', '2. List do Koryntian')
    => map:with('Ga', 'List do Galatów')
    => map:with('Ef', 'List do Efezjan')
    => map:with('Flp', 'List do Filipian')
    => map:with('Kol', 'List do Kolosan')
    => map:with('1Tes', '1. List do Tesaloniczan')
    => map:with('2Tes', '2. List do Tesaloniczan')
    => map:with('1Tm', '1. List do Tymoteusza')
    => map:with('2Tm', '2. List do Tymoteusza')
    => map:with('Tt', 'List do Tytusa')
    => map:with('Flm', 'List do Filemona')
    => map:with('Hbr', 'List do Hebrajczyków')
    => map:with('Jk', 'List św. Jakuba')
    => map:with('1P', '1. List św. Piotra')
    => map:with('2P', '2. List św. Piotra')
    => map:with('1J', '1. List św. Jana')
    => map:with('2J', '2. List św. Jana')
    => map:with('3J', '3. List św. Jana')
    => map:with('Jud', 'List św. Judy')
    => map:with('Ap', 'Apokalipsa wg św. Jana');

for $tome-siglum in map:keys($TOME-NAMES-MAP)
let $expected := map:get($TOME-NAMES-MAP, $tome-siglum)
let $actual := bib:retrieve-tome-name($tome-siglum)
return test:assert-equal($expected, $actual, 'Incorrect name assignement for tome ' || $tome-siglum)